var express = require('express');
var http = require('http');
var url = require("url");
var app = express();

app.set('port', (process.env.PORT || 5000));

app.use('/redline.json', express.static(__dirname + '/public'));

// views is directory for all template files
app.set('views', __dirname + '/views');
app.set('view engine', 'ejs');

app.get('/', function(req, res) {
  res.send('http://developer.mbta.com/lib/rthr/red.json');
});

app.listen(app.get('port'), function() {
  console.log('Node app is running on port', app.get('port'));
});

/*
 var options = {
   host: 'www.google.com',
   path: '/index.html'
 };
 
 var req = http.get(options, function(res) {
   console.log('STATUS: ' + res.statusCode);
   console.log('HEADERS: ' + JSON.stringify(res.headers));
 
   // Buffer the body entirely for processing as a whole.
   var bodyChunks = [];
   res.on('data', function(chunk) {
     // You can process streamed parts here...
     bodyChunks.push(chunk);
   }).on('end', function() {
     var body = Buffer.concat(bodyChunks);
     console.log('BODY: ' + body);
     // ...and/or process the entire body here.
   })
 });
 
 req.on('error', function(e) {
   console.log('ERROR: ' + e.message);
 });
 */

/*
var express = require('express');
var app = express();

app.set('port', (process.env.PORT || 5000));

app.use('/lab8', express.static(__dirname + '/public'));

// views is directory for all template files
app.set('views', __dirname + '/views');
app.set('view engine', 'ejs');

app.get('/', function(req, res) {
  response.render('pages/index');
});

app.listen(app.get('port'), function() {
  console.log('Node app is running on port', app.get('port'));
});
*/